# RDBMS to Graph RAG Configuration

# Database Configurations
databases:
  postgres:
    enabled: true
    host: ${POSTGRES_HOST:localhost}
    port: ${POSTGRES_PORT:5432}
    user: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    database: ${POSTGRES_DB:sample_db}
    
  mysql:
    enabled: true
    host: ${MYSQL_HOST:localhost}
    port: ${MYSQL_PORT:3306}
    user: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:mysql}
    database: ${MYSQL_DB:sample_db}
    
  sqlite:
    enabled: true
    path: ./data/sample.db

# Graph Database Configurations
graph_databases:
  neo4j:
    enabled: true
    uri: ${NEO4J_URI:bolt://localhost:7687}
    user: ${NEO4J_USER:neo4j}
    password: ${NEO4J_PASSWORD:neo4jpassword}
    database: ${NEO4J_DATABASE:neo4j}
    
  neptune:
    enabled: false
    endpoint: ${NEPTUNE_ENDPOINT:}
    port: ${NEPTUNE_PORT:8182}
    region: ${AWS_REGION:us-east-1}

# LLM Configuration
llm:
  # Provider: openai, gemini, or anthropic
  provider: ${LLM_PROVIDER:openai}
  temperature: ${LLM_TEMPERATURE:0.0}
  max_tokens: ${MAX_TOKENS:4096}

  # OpenAI configuration
  openai:
    api_key: ${OPENAI_API_KEY:}
    model: ${OPENAI_MODEL:gpt-4o-mini}

  # Google Gemini configuration
  gemini:
    api_key: ${GEMINI_API_KEY:}
    model: ${GEMINI_MODEL:gemini-1.5-flash}

# Embedding Configuration
embeddings:
  provider: openai
  model: ${EMBEDDING_MODEL:text-embedding-3-small}
  dimension: ${EMBEDDING_DIMENSION:1536}
  batch_size: 100

# Schema Mapping Configuration
schema_mapping:
  # LLM Enhancement
  llm_enhancement:
    enabled: true
    provider: ${SCHEMA_LLM_PROVIDER:openai}  # openai or gemini
    model: ${SCHEMA_LLM_MODEL:gpt-4o-mini}
    use_statistical_analysis: true
    send_sample_data: false
    max_tables_for_llm: 20

  # Relationship inference settings
  inference:
    use_naming_conventions: true
    use_foreign_keys: true
    use_column_similarity: true
    use_llm_inference: true  # Use LLM for relationship inference (metadata only)
    similarity_threshold: 0.7

  # Node label generation
  node_labels:
    use_table_name: true
    singularize: true
    capitalize: true
    use_llm_suggestions: true  # Get LLM suggestions for better labels

  # Property mapping
  properties:
    include_all_columns: true
    exclude_system_columns: true
    infer_types: true

# Agentic Retrieval Configuration
retrieval:
  # LangGraph settings
  langgraph:
    max_iterations: 5
    enable_reflection: true
    enable_planning: true
    
  # Query processing
  query:
    enable_query_expansion: true
    enable_semantic_search: true
    enable_hybrid_search: true
    top_k: 10
    
  # Context building
  context:
    max_context_length: 8000
    include_relationships: true
    relationship_depth: 2

# API Configuration
api:
  host: ${API_HOST:0.0.0.0}
  port: ${API_PORT:8000}
  reload: ${API_RELOAD:true}
  cors_origins:
    - http://localhost:3000
    - http://localhost:8000
    
# Logging Configuration
logging:
  level: ${LOG_LEVEL:INFO}
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: logs/app.log

# Performance Configuration
performance:
  batch_size: 1000
  max_workers: 4
  cache_enabled: true
  cache_ttl: 3600

