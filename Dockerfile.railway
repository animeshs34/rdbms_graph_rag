# Ultra-fast Railway build - optimized for speed
FROM python:3.11-slim

WORKDIR /app

# Copy only requirements first for layer caching
COPY requirements-prod.txt .

# Install dependencies with aggressive optimization
# --only-binary :all: forces binary wheels (no compilation)
# Falls back to --prefer-binary if some packages don't have wheels
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --only-binary :all: -r requirements-prod.txt || \
    pip install --no-cache-dir --prefer-binary -r requirements-prod.txt

# Copy only necessary application files
COPY src ./src
COPY config ./config

# Create minimal .env if not exists (Railway uses env vars)
RUN touch .env

# Create non-root user
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Environment
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

EXPOSE 8000

# Simple health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')" || exit 1

# Start command (Railway will inject $PORT)
# Use shell form to allow environment variable expansion
CMD ["sh", "-c", "uvicorn src.api.main:app --host 0.0.0.0 --port ${PORT:-8000} --workers 1"]

